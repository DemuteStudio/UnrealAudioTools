// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "StaticMeshAudioEmitterBase.generated.h"

/**
 * Base class from which to derive for the static mesh audio emitters.
 * Make sure to reparent the BP also provided with this plugin.
 * You will most probably need to create your own child class to handle stuff like optimisation of sources.
 * We might provide that out of the box in future iterations of the tool.
 */
UCLASS()
class DM_STATICMESHEMITTERS_API AStaticMeshAudioEmitterBase : public AActor
{
	GENERATED_UCLASS_BODY()

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;
	
	UPROPERTY(EditAnywhere,BlueprintReadWrite, meta = (ExposeOnSpawn = true), Category = "Static Mesh Audio Emitter")
	bool AutoGenerated = false;

	/**We only store the name of the static mesh to avoid unnecessary dependencies and loading*/
	UPROPERTY(EditAnywhere, BlueprintReadWrite, meta = (ExposeOnSpawn = true), Category = "Static Mesh Audio Emitter")
	FString StaticMeshName;

	/**Source Component to handle gizmo and possibly playback in the future
	 * Yes, I did an extra component only for the gizmo...
	 */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = "Static Mesh Audio Emitter", meta = (ShowOnlyInnerProperties))
	class UStaticMeshEmitterSourceComponent* SourceComponent;
};
